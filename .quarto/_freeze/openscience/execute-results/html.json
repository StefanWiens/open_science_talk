{
  "hash": "f83db15fddceee205fc63a3db16f7e6a",
  "result": {
    "markdown": "---\ntitle: \"Open science\"\nsubtitle: \"Institutionsdag @ Psychology\"\nauthor: \"Stefan Wiens & Gustav Nilsonne\"\ndate: \"2022-08-25\"\nformat: \n  revealjs: \n    incremental: true\n    theme: solarized\n    preview-links: true\neditor: visual\n---\n\n\n## open science\n\nA collection of actions designed to\n\n-   make scientific processes more **transparent** and their\n-   results more **accessible** (Spellman et al. , 2018)\n\n## transparency\n\n-   shows all steps of the scientific process\n-   provides details of study process\n-   avoids filtering by results\n    -   research flexibility\n    -   publication bias\n\n. . .\n\n![](images/cherrypicking_girl.jpg){.absolute bottom=\"40\" right=\"10\" width=\"500\"}\n\n## accessibility\n\n-   preregistration\n-   material\n-   data\n-   analysis scripts\n-   preprint\n\n## preregistration\n\n-   research recipe\n-   reduce research flexibility\n-   check feasibility before collecting data\n-   save time and effort\n-   [OSF](https://osf.io/) (Open science framework)\n    -   [own example](https://osf.io/psrjf)\n-   Registered Report\n    -   preregistration with a journal\n    -   in-principle acceptance\n\n## sharing data/material\n\n-   data reuse: study as data-point in a future meta-analysis (Lakens et al., 2016)\n-   consider ethics/waste in **not** sharing\n\n. . .\n\n![](images/data-sharing%20cartoon.jpg){.absolute bottom=\"50\" right=\"0\" width=\"300\"}\n\n-   plan ahead for data sharing ([FAIR](https://www.go-fair.org/fair-principles/))\n-   ethics (GDPR)\n-   data storage\n    -   [SUB support](https://www.su.se/staff/researchers/research-data/manage-store-data)\n    -   [figshare Stefan project](https://su.figshare.com/articles/dataset/Open_data_Electrophysiological_correlates_of_in-vivo_and_virtual_reality_therapy_in_spider_phobia/14891607)\n\n## analysis scripts\n\n-   literal programming\n    -   mix analyses with text\n-   R environment ([R](https://www.r-project.org/), [RStudio](https://www.rstudio.com/), [Rmarkdown](https://rmarkdown.rstudio.com/))\n    -   [Stefan example](https://su.figshare.com/articles/dataset/Open_data_Electrophysiological_correlates_of_in-vivo_and_virtual_reality_therapy_in_spider_phobia/14891607)\n-   [Python](https://www.python.org/)\n-   share scripts via [github](https://github.com/)\n-   [Quarto](https://quarto.org/)\n    -   [this git depository](https://github.com/StefanWiens/open_science_talk.git)\n    -   [this presentation](https://stefanwiens.github.io/open_science_talk/openscience.html)\n\n## preprints\n\n-   share without delay\n\n## open science\n\nmakes science\n\n-   transparent\n-   accessible\n\n## discussion\n\ntime for discussion\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n\r\n      // dispatch for htmlwidgets\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for reveal\r\n    if (window.Reveal) {\r\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\r\n        fireSlideChanged(event.previousSlide, event.currentSlide);\r\n      });\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}